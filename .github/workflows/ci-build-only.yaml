name: Build and Deploy Refactor

on:
  push:
    branch: refactor

env:
  REGISTRY: docker.pkg.github.com
  # REGISTRY_USERNAME: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
  # REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
  #REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
  REGISTRY_USERNAME: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: ${{ env.REGISTRY }}/bcgov/aps-portal/aps-portal

    - name: Set DEPLOY_ID which will deploy a custom deploy to 'dev' environment
      run: echo '::set-output name=DEPLOY_ID::${{ steps.docker_meta.outputs.version }}'
      id: set-deploy-id

    - name: Get deploy ID
      run: echo "The DEPLOY_ID is ${{ steps.set-deploy-id.outputs.DEPLOY_ID }}"

    - uses: actions/checkout@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.REGISTRY_USERNAME }}
        password: ${{ env.REGISTRY_PASSWORD }}

    - uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build
      uses: docker/build-push-action@v2
      with:
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        context: .
        file: Dockerfile
        tags: ${{ steps.docker_meta.outputs.tags }} 
        load: true
        build-args: |
          GITHUB_API_TOKEN=${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

    - name: Push
      run: docker push ${{ steps.docker_meta.outputs.tags }} 
