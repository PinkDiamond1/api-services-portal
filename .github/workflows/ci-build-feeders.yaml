name: Build Data-Feeder

on:
  push:
    branches: [ dev, main, feature/* ]

env:
  REGISTRY: docker.pkg.github.com
  # REGISTRY_USERNAME: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
  # REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
  #REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
  REGISTRY_USERNAME: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: ${{ env.REGISTRY }}/bcgov/aps-portal/data-feeder

    - uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.REGISTRY_USERNAME }}
        password: ${{ env.REGISTRY_PASSWORD }}

    - uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build
      uses: docker/build-push-action@v2
      with:
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        context: feeds
        file: feeds/Dockerfile
        tags: ${{ steps.docker_meta.outputs.tags }} 
        load: true
        build-args: |
          GITHUB_API_TOKEN=${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

    - name: Push
      run: docker push ${{ steps.docker_meta.outputs.tags }} 

    - name: 'Deploy Feeder'
      run: |
        export PATH=$PATH:`pwd`/linux-amd64

        echo "
        podAnnotations:
          sha: $GITHUB_SHA

        replicaCount: 1

        rollingUpdate:
          maxUnavailable: 50%
          maxSurge: 50%

        image:
          repository: ${{ env.REGISTRY }}/bcgov/aps-portal/data-feeder
          tag: ${{ steps.set-deploy-id.outputs.DEPLOY_ID }}
          pullPolicy: Always

        imagePullSecrets:
          - name: dev-github-read-packages-creds

        podSecurityContext:
          fsGroup: ${{ secrets.RUNNING_UID_GID }}

        securityContext:
          runAsUser: ${{ secrets.RUNNING_UID_GID }}

        containerPort: 6000

        env:
          SESSION_SECRET:
            value: '234873290483290'
            secure: true
          AUTH_STRATEGY:
            value: Oauth2Proxy
          KONG_URL:
            value: '${{ secrets.KONG_URL_DEV}}'
          GITHUB_API_TOKEN:
            value: '${{ secrets.GH_TOKEN_FOR_CONTENT}}'
            secure: true
          OIDC_ISSUER:  
            value: '${{ secrets.OIDC_ISSUER }}'
          JWKS_URL:
            value: '${{ secrets.OIDC_ISSUER }}/protocol/openid-connect/certs'
          EXTERNAL_URL:
            value: 'https://aps-portal-${{ steps.set-deploy-id.outputs.DEPLOY_ID }}.apps.silver.devops.gov.bc.ca'
          NEXT_PUBLIC_API_ROOT:
            value: 'https://aps-portal-${{ steps.set-deploy-id.outputs.DEPLOY_ID }}.apps.silver.devops.gov.bc.ca'          

        " > values.yaml
        
        helm repo add bcgov http://bcgov.github.io/helm-charts
        helm upgrade --install proto-aps-portal-${{ steps.set-deploy-id.outputs.DEPLOY_ID }}-feeder -f values.yaml bcgov/generic-api
