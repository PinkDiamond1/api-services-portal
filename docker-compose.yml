version: '3.8'
services:
  keycloak:
    image: jboss/keycloak:11.0.3
    container_name: keycloak
    hostname: keycloak
    command:
      [
        '-b',
        '0.0.0.0',
        '-Djboss.socket.binding.port-offset=1000',
        '-Dkeycloak.migration.action=import',
        '-Dkeycloak.migration.provider=dir',
        '-Dkeycloak.migration.dir=/realm-config',
        '-Dkeycloak.migration.strategy=IGNORE_EXISTING',
      ]
    ports:
      - 9080:9080/tcp
    environment:
      KEYCLOAK_USER: local
      KEYCLOAK_PASSWORD: local
    volumes:
      - ./keycloak:/realm-config
    networks:
      keycloak:
        aliases:
          - keycloak.localtest.me
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    ports:
      - 27017:27017
    networks:
      portal: {}
  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.1.3
    container_name: oauth2-proxy
    command: --config ./oauth2-proxy.cfg
    ports:
      - 4180:4180/tcp
    volumes:
      - ./oauth2-proxy/oauth2-proxy-local.cfg:/oauth2-proxy.cfg
    restart: unless-stopped
    env_file:
      - .env
    networks:
      keycloak: {}
      oauth2-proxy: {}
      portal: {}
  apsportal:
    container_name: apsportal
    depends_on:
      - mongodb
      - keycloak
      - oauth2-proxy
    command:
      - dev
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    networks:
      portal:
        aliases:
          - apsportal.localtest.me
      keycloak: {}
      oauth2-proxy: {}
networks:
  keycloak: {}
  oauth2-proxy: {}
  portal: {}
